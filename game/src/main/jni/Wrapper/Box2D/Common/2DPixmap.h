/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_guidebee_game_engine_graphics_g2d_NativePixmap */
#include <stdint.h>


#ifndef _Included_com_guidebee_game_engine_graphics_g2d_NativePixmap
#define _Included_com_guidebee_game_engine_graphics_g2d_NativePixmap
#ifdef __cplusplus
extern "C" {
#endif
#undef com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_ALPHA
#define com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_ALPHA 1L
#undef com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_LUMINANCE_ALPHA
#define com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_LUMINANCE_ALPHA 2L
#undef com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_RGB888
#define com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_RGB888 3L
#undef com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_RGBA8888
#define com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_RGBA8888 4L
#undef com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_RGB565
#define com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_RGB565 5L
#undef com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_RGBA4444
#define com_guidebee_game_engine_graphics_g2d_NativePixmap_FORMAT_RGBA4444 6L
#undef com_guidebee_game_engine_graphics_g2d_NativePixmap_SCALE_NEAREST
#define com_guidebee_game_engine_graphics_g2d_NativePixmap_SCALE_NEAREST 0L
#undef com_guidebee_game_engine_graphics_g2d_NativePixmap_SCALE_LINEAR
#define com_guidebee_game_engine_graphics_g2d_NativePixmap_SCALE_LINEAR 1L
#undef com_guidebee_game_engine_graphics_g2d_NativePixmap_BLEND_NONE
#define com_guidebee_game_engine_graphics_g2d_NativePixmap_BLEND_NONE 0L
#undef com_guidebee_game_engine_graphics_g2d_NativePixmap_BLEND_SRC_OVER
#define com_guidebee_game_engine_graphics_g2d_NativePixmap_BLEND_SRC_OVER 1L

/**
 * pixmap formats, components are laid out in memory
 * in the order they appear in the constant name. E.g.
 * FORMAT_RGB => pixmap[0] = r, pixmap[1] = g, pixmap[2] = b.
 * Components are 8-bit each except for RGB565 and RGBA4444 which
 * take up two bytes each. The order of bytes is machine dependent
 * within a short the high order byte holds r and the first half of g
 * the low order byte holds the lower half of g and b as well as a
 * if the format is RGBA4444
 */
#define FORMAT_ALPHA 				1
#define FORMAT_LUMINANCE_ALPHA 	2
#define FORMAT_RGB888 			3
#define FORMAT_RGBA8888			4
#define FORMAT_RGB565				5
#define FORMAT_RGBA4444			6

/**
 * blending modes, to be extended
 */
#define BLEND_NONE 		0
#define BLEND_SRC_OVER 	1

/**
 * scaling modes, to be extended
 */
#define SCALE_NEAREST		0
#define SCALE_BILINEAR	1

/**
 * simple pixmap struct holding the pixel data,
 * the dimensions and the format of the pixmap.
 * the format is one of the FORMAT_XXX constants.
 */
typedef struct {
	uint32_t width;
	uint32_t height;
	uint32_t format;
	const unsigned char* pixels;
} native_pixmap;

JNIEXPORT native_pixmap* native_load (const unsigned char *buffer, uint32_t len);
JNIEXPORT native_pixmap* native_new  (uint32_t width, uint32_t height, uint32_t format);
JNIEXPORT void 		 native_free (const native_pixmap* pixmap);

JNIEXPORT void native_set_blend	  (uint32_t blend);
JNIEXPORT void native_set_scale	  (uint32_t scale);

JNIEXPORT const char*   native_get_failure_reason(void);
JNIEXPORT void		native_clear	   	  (const native_pixmap* pixmap, uint32_t col);
JNIEXPORT void		native_set_pixel   (const native_pixmap* pixmap, int32_t x, int32_t y, uint32_t col);
JNIEXPORT uint32_t native_get_pixel	  (const native_pixmap* pixmap, int32_t x, int32_t y);
JNIEXPORT void		native_draw_line   (const native_pixmap* pixmap, int32_t x, int32_t y, int32_t x2, int32_t y2, uint32_t col);
JNIEXPORT void		native_draw_rect   (const native_pixmap* pixmap, int32_t x, int32_t y, uint32_t width, uint32_t height, uint32_t col);
JNIEXPORT void		native_draw_circle (const native_pixmap* pixmap, int32_t x, int32_t y, uint32_t radius, uint32_t col);
JNIEXPORT void		native_fill_rect   (const native_pixmap* pixmap, int32_t x, int32_t y, uint32_t width, uint32_t height, uint32_t col);
JNIEXPORT void		native_fill_circle (const native_pixmap* pixmap, int32_t x, int32_t y, uint32_t radius, uint32_t col);
JNIEXPORT void		native_fill_triangle(const native_pixmap* pixmap,int32_t x1, int32_t y1, int32_t x2, int32_t y2, int32_t x3, int32_t y3, uint32_t col);
JNIEXPORT void		native_draw_pixmap (const native_pixmap* src_pixmap,
								   const native_pixmap* dst_pixmap,
								   int32_t src_x, int32_t src_y, uint32_t src_width, uint32_t src_height,
								   int32_t dst_x, int32_t dst_y, uint32_t dst_width, uint32_t dst_height);

JNIEXPORT uint32_t native_bytes_per_pixel(uint32_t format);


/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    load
 * Signature: ([J[BII)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_load
  (JNIEnv *, jclass, jlongArray, jbyteArray, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    newPixmap
 * Signature: ([JIII)Ljava/nio/ByteBuffer;
 */
JNIEXPORT jobject JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_newPixmap
  (JNIEnv *, jclass, jlongArray, jint, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    free
 * Signature: (J)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_free
  (JNIEnv *, jclass, jlong);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    clear
 * Signature: (JI)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_clear
  (JNIEnv *, jclass, jlong, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    setPixel
 * Signature: (JIII)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_setPixel
  (JNIEnv *, jclass, jlong, jint, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    getPixel
 * Signature: (JII)I
 */
JNIEXPORT jint JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_getPixel
  (JNIEnv *, jclass, jlong, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    drawLine
 * Signature: (JIIIII)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_drawLine
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    drawRect
 * Signature: (JIIIII)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_drawRect
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    drawCircle
 * Signature: (JIIII)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_drawCircle
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    fillRect
 * Signature: (JIIIII)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_fillRect
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    fillCircle
 * Signature: (JIIII)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_fillCircle
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    fillTriangle
 * Signature: (JIIIIIII)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_fillTriangle
  (JNIEnv *, jclass, jlong, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    drawPixmap
 * Signature: (JJIIIIIIII)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_drawPixmap
  (JNIEnv *, jclass, jlong, jlong, jint, jint, jint, jint, jint, jint, jint, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    setBlend
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_setBlend
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    setScale
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_setScale
  (JNIEnv *, jclass, jint);

/*
 * Class:     com_guidebee_game_engine_graphics_g2d_NativePixmap
 * Method:    getFailureReason
 * Signature: ()Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_getFailureReason
  (JNIEnv *, jclass);

/*
 * Class:     com_guidebee_game_engine_graphics_NativePixmap
 * Method:    drawRGB
 * Signature: (I)V;
 */
JNIEXPORT void JNICALL Java_com_guidebee_game_engine_graphics_NativePixmap_drawRGB
  (JNIEnv *, jclass,jlong pixmap,jintArray);

#ifdef __cplusplus
}
#endif
#endif
